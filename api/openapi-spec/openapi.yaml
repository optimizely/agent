openapi: 3.0.0
info:
  title: Optimizely Agent API
  description: Optimizely Agent is a stand-alone, open-source microservice that provides major benefits over using Optimizely SDKs in certain use cases. Its REST API offers consolidated and simplified endpoints for accessing all the functionality of Optimizely Full Stack SDKs. Use this API the control experiments (such as a feature tests). For more info, see https://docs.developers.optimizely.com/full-stack/docs/optimizely-agent. 
  termsOfService: http://optimizely.com/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.12.0
security:
  - SdkKeyAuth: []
  - TokenAuth: []
paths:
  /v1/config:
    get:
      summary: Return the Optimizely config for the given environment
      operationId: getConfig
      description: Return all available experiment and features definitions for this environment.
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                description: Optimizely Configuration
                $ref: '#/components/schemas/OptimizelyConfig'
        '401':
          description: Unauthorized, invalid JWT
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/track:
    parameters:
      - $ref: '#/components/parameters/eventKeyParam'
    post:
      summary: Track event for the given user.
      operationId: trackEvent
      description: Send event and user details to Optimizely analytics backend, so you can see metrics for an experiment. You can view metrics either on your Results page or as a data export.
      responses:
        '200':
          description: Valid response, event received
        '400':
          description: Missing required parameters
        '401':
          description: Unauthorized, invalid JWT
        '403':
          $ref: '#/components/responses/Forbidden'
      requestBody:
        $ref: '#/components/requestBodies/TrackContext'
  /v1/activate:
    parameters:
      - $ref: '#/components/parameters/featureKeyParam'
      - $ref: '#/components/parameters/experimentKeyParam'
      - $ref: '#/components/parameters/disableTrackingParam'
      - $ref: '#/components/parameters/typeParam'
      - $ref: '#/components/parameters/enabledParam'
    post:
      summary: Activate selected features and experiments for the given user.
      operationId: activate
      description: Returns Optimizely's decision about which features and experiments a given user is exposed to. Optionally sends an impression event to the Optimizely analytics backend for any decision made for an experiment. This endpoint consolidates key functionality from the Full Stack SDKs into one convenient call.
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Decision'
        '400':
          description: Bad request, invalid parameters
        '401':
          description: Unauthorized, invalid JWT
        '403':
          $ref: '#/components/responses/Forbidden'
      requestBody:
        $ref: '#/components/requestBodies/ActivateContext'
  /v1/override:
    post:
      summary: Override an experiment decision for a user
      operationId: override
      description: For debugging or testing. Overrides an experiment and variation decision for a given user, in local memory only. Do not use this endpoint for production overrides.
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Override'
        '400':
          description: Invalid payload
        '401':
          description: Unauthorized, invalid JWT
        '403':
          $ref: '#/components/responses/Forbidden'
      requestBody:
        $ref: '#/components/requestBodies/OverrideContext'
  /oauth/token:
    post:
      summary: Get JWT token to authenticate all requests.
      operationId: getToken
      description: Generates valid JWT token for grant_type, client_id, and client_secret, using the values you pass in the request body.  Configure expiration time and SDK keys (to which the token grants access) in Optimizely config. 
      responses:
        '200':
          description: Generates a valid token
        '401':
          description: Unauthorized, invalid values for parameter(s)
          $ref: '#/components/responses/UnauthorizedToken'
      requestBody:
        $ref: '#/components/requestBodies/TokenContext'
components:
  parameters:
    disableTrackingParam:
      in: query
      name: disableTracking
      required: false
      description: Setting to true will disable impression tracking for experiments.
      schema:
        type: boolean
    enabledParam:
      in: query
      name: enabled
      required: false
      description: Filter the activation response to return only enabled descisions.
      schema:
        type: boolean
    eventKeyParam:
      in: query
      name: eventKey
      required: true
      description: Key of the event we're tracking
      schema:
        type: string
    experimentKeyParam:
      in: query
      name: experimentKey
      description: Key for the Optimizely Experiment
      schema:
        type: array
        items:
          type: string
    featureKeyParam:
      in: query
      name: featureKey
      description: Key for the Optimizely Feature
      schema:
        type: array
        items:
          type: string
    typeParam:
      in: query
      name: type
      required: false
      description: Limit the decisions to either experiment or features
      schema:
        type: string
        enum:
          - feature
          - experiment
  requestBodies:
    ActivateContext:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivateContext'
    OverrideContext:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OverrideContext'
    TrackContext:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackContext'
    TokenContext:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenContext'
  responses:
    Forbidden:
      description: You do not have necessary permissions for the resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedToken:
      description: Unable to match credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenError'
  schemas:
    Error:
      properties:
        error:
          type: string
    TokenError:
      properties:
        error:
          type: string
        error_description:
          type: string
    Experiment:
      properties:
        id:
          type: string
        key:
          type: string
        variationsMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variation'
      required:
        - id
        - key
    Feature:
      properties:
        id:
          type: string
        key:
          type: string
        variablesMap:
          type: object
          additionalProperties:
            type: object
        experimentsMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Experiment'
      required:
        - id
        - key
    Decision:
      properties:
        featureKey:
          type: string
        experimentKey:
          type: string
        variationKey:
          type: string
        type:
          type: string
          enum:
            - feature
            - experiment
            - ''
        enabled:
          type: boolean
        variables:
          type: object
          additionalProperties: true
        error:
          type: string
    ActivateContext:
      properties:
        userId:
          type: string
        userAttributes:
          type: object
          additionalProperties: true
    Override:
      properties:
        userId:
          type: string
        experimentKey:
          type: string
        variationKey:
          type: string
        prevVariationKey:
          type: string
        messages:
          type: array
          items:
            type: string
    OverrideContext:
        type: object
        properties:
          userId:
            type: string
          experimentKey:
            type: string
          variationKey:
            type: string
    OptimizelyConfig:
      properties:
        revision:
          type: string
        experimentsMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Experiment'
        featuresMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Feature'
    TrackContext:
      properties:
        eventTags:
          type: object
          additionalProperties: true
        userId:
          type: string
        userAttributes:
          type: object
          additionalProperties: true
    Variation:
      properties:
        id:
          type: string
        key:
          type: string
      required:
        - id
        - key
    Variable:
      properties:
        id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: object
      required:
        - id
        - key
    TokenContext:
      properties:
        grant_type:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
# securitySchemes:
#    SdkKeyAuth:
#      in: header
#      name: X-Optimizely-SDK-Key
#      type: apiKey
#    TokenAuth:
#      type: http
#      scheme: bearer
#      bearerFormat: JWT
