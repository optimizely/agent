openapi: 3.0.0
info:
  title: Optimizely Server API
  description: Optimizely.
  termsOfService: http://optimizely.com/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.2.0
servers:
- url: https://fullstack.api.optimizely.com
  description: "Hosted Optimizely Decision Service"
paths:
  /experiments:
    get:
      summary: Return all experiments
      operationId: listExperiments
      parameters:
      - name: X-Optimizely-SDK-Key
        in: header
        schema:
          type: string
        required: true
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experiment'
  /experiments/{experimentKey}:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/experimentKeyParam'
    get:
      summary: Return variation for a given user and experiment
      operationId: getExperiment
      description: todo
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '404':
          description: Experiment does not exist
  /experiments/{experimentKey}/variations:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/experimentKeyParam'
    get:
      summary: Return variation for a given user and experiment
      operationId: listExperimentVariations
      description: todo
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Variation'
        '204':
          description: No content, user not included in the experiment
        '404':
          description: Experiment does not exist
  /experiments/{experimentKey}/variations/{variationKey}:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/experimentKeyParam'
    - $ref: '#/components/parameters/variationKeyParam'
    get:
      summary: Return variation for a given user and experiment
      operationId: getExperimentVariation
      description: todo
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variation'
        '204':
          description: No content, user not included in the experiment
        '404':
          description: Experiment does not exist
  /features:
    get:
      summary: Return all features
      operationId: listFeatures
      parameters:
      - name: X-Optimizely-SDK-Key
        in: header
        schema:
          type: string
        required: true
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                description: List of features
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
  /features/{featureKey}:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/featureKeyParam'
    get:
      summary: Return the feature
      operationId: getFeature
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '404':
          description: Experiment does not exist
  /features/{featureKey}/variations:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/featureKeyParam'
    get:
      summary: Return feature variations
      operationId: listFeatureVariations
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureVariation'
        '404':
          description: Feature does not exist or variations DNE
  /features/{featureKey}/variations/{variationKey}:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/featureKeyParam'
    - $ref: '#/components/parameters/variationKeyParam'
    get:
      summary: Return the feature variant
      operationId: getFeatureVariation
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureVariation'
        '404':
          description: Feature does not exist or variation DNE
  /user-event:
    post:
      summary: User event endpoint
      operationId: AddUserEvent
      responses:
        '204':
          description: Valid response
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEvent'
  /users/{userId}/events/{eventKey}:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/userIdParam'
    - $ref: '#/components/parameters/eventKeyParam'
    - $ref: '#/components/parameters/attributesParam'
    post:
      summary: Track event for the given user.
      operationId: trackEvent
      description: todo
      responses:
        '204':
          description: No content, user not included in the experiment
        '404':
          description: Event does not exist
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
  /users/{userId}/experiments/{experimentKey}:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/userIdParam'
    - $ref: '#/components/parameters/experimentKeyParam'
    - $ref: '#/components/parameters/attributesParam'
    get:
      summary: Return variation decision for an experiment
      operationId: getVariation
      description: todo
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variation'
        '204':
          description: No content, user not included in the experiment
        '404':
          description: Experiment does not exist
    post:
      summary: Activate experiment and return variation
      operationId: activateExperiment
      description: todo
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variation'
        '204':
          description: No content, user not included in the experiment
        '404':
          description: Experiment does not exist
  /users/{userId}/features/{featureKey}:
    parameters:
    - $ref: '#/components/parameters/sdkKeyParam'
    - $ref: '#/components/parameters/userIdParam'
    - $ref: '#/components/parameters/featureKeyParam'
    - $ref: '#/components/parameters/attributesParam'
    get:
      summary: Return feature resulting from an experiment or rollout
      operationId: getFeatureDecision
      description: todo
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureVariation'
        '204':
          description: No content, user not included in the experiment
        '404':
          description: Feature does not exist
    post:
      summary: Activate feature and return associated variable values
      operationId: activateFeature
      description: todo
      responses:
        '200':
          description: Valid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureVariation'
        '204':
          description: No content, user not included in the experiment
        '404':
          description: Feature does not exist
components:
  parameters:
    sdkKeyParam:
      in: header
      name: X-Optimizely-SDK-Key
      schema:
        type: string
      required: true
    attributesParam:
      in: query
      name: attributes
      required: false
      schema:
        type: object
        additionalProperties:
          type: string
    eventKeyParam:
      in: path
      name: eventKey
      required: true
      description: Key of the event we're tracking
      schema:
        type: string
    experimentKeyParam:
      in: path
      name: experimentKey
      required: true
      description: Key of the experiment we're activating
      schema:
        type: string
    featureKeyParam:
      in: path
      name: featureKey
      required: true
      description: Key of the feature we're activating
      schema:
        type: string
    userIdParam:
      name: userId
      in: path
      required: true
      description: Id associated with the user
      schema:
        type: string
    variationKeyParam:
      name: variationKey
      in: path
      required: true
      description: Key of the variation we're fetching
      schema:
        type: string
  schemas:
    Experiment:
      properties:
        id:
          type: integer
        key:
          type: string
        variations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variation'
      # Both properties are required
      required:
      - id
      - key
    Variation:
      properties:
        id:
          type: integer
        key:
          type: string
      # Both properties are required
      required:
      - id
      - key
    Feature:
      properties:
        id:
          type: integer
        key:
          type: string
        variables:
          type: object
          additionalProperties:
            type: string
        variations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FeatureVariation'
      # Both properties are required
      required:
      - id
      - key
    FeatureVariation:
      properties:
        id:
          type: integer
        key:
          type: string
        enabled:
          type: boolean
        variables:
          type: object
          additionalProperties:
            type: string
      # Both properties are required
      required:
      - id
      - key
    UserEvent:
      properties:
        timestamp:
          type: integer
          format: int64
        uuid:
          type: string
        context:
          $ref: '#/components/schemas/UserEventContext'
        visitor_id:
          type: string
        impression:
          $ref: '#/components/schemas/ImpressionEvent'
        conversion:
          $ref: '#/components/schemas/ConversionEvent'
      required:
      - timestamp
      - uuid
      - visitor_id
      - context
    UserEventContext:
      properties:
        revision:
          type: string
        account_id:
          type: string
        client_version:
          type: string
        project_id:
          type: string
        client_name:
          type: string
        anonymize_ip:
          type: boolean
        bot_filtering:
          type: boolean
      required:
      - revision
      - account_id
      - client_version
      - project_id
      - client_name
      - anonymize_ip
      - bot_filtering
    ImpressionEvent:
      properties:
        entity_id:
          type: string
        key:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/VisitorAttribute'
        variation_id:
          type: string
        campaign_id:
          type: string
        experiment_id:
          type: string
      required:
      - entity_id
      - key
      - variation_id
      - campaign_id
      - experiment_id
    ConversionEvent:
      properties:
        entity_id:
          type: string
        key:
          type: string
        revenue:
          type: integer
          format: int64
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/VisitorAttribute'
        tags:
          type: object
          additionalProperties: true
        value:
          type: number
          format: double
      required:
      - entity_id
      - key
      - variation_id
      - campaign_id
      - experiment_id
    VisitorAttribute:
      properties:
        value: {}
        key:
          type: string
        attribute_type:
          type: string
        entity_id:
          type: string
      required:
      - value
      - key
      - attribute_type
      - entity_id
