name: build

on:
  push:
    branches: [ master ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ master ]

env:
  GIMME_GO_VERSION: 1.20.2
  GIMME_OS: linux
  GIMME_ARCH: amd64

jobs:
  tests_using_latest_tag_no_upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-go@v3
      with:
        go-version: '1.20'
        check-latest: true
    - name: Get the version
      id: get_version
      run: |
        git fetch --tags --force
        echo ::set-output name=VERSION::$(git describe --abbrev=0 --tags | tr -d '^v')
    - name: Get current workspace path
      id: get_workspace
      run: echo ::set-output name=WORKSPACE::${GITHUB_WORKSPACE}
    - name: set the env
      run: |
        echo "APP_VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
        echo "TRAVIS_BUILD_DIR=${{ steps.get_workspace.outputs.WORKSPACE }}" >> $GITHUB_ENV
    - name: test
      env:
        TRAVIS_OS_NAME: 'linux'
      run: |
        make -e setup build
        ./scripts/ci_create_packages.sh
        ./scripts/ci_build_generate_secret.sh

  build_upload_publish_draft:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-go@v3
      with:
        go-version: '1.20'
        check-latest: true
    - uses: actions/checkout@v2
      with:
        # You should create a personal access token and store it in your repository
        token: ${{ secrets.CI_USER_TOKEN }}
        repository: 'optimizely/travisci-tools'
        path: 'home/runner/travisci-tools'
        ref: 'master'
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF_NAME}
    - name: Get current workspace path
      id: get_workspace
      run: echo ::set-output name=WORKSPACE::${GITHUB_WORKSPACE}
    - name: set the env
      run: |
        echo "APP_VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
        echo "TRAVIS_BUILD_DIR=${{ steps.get_workspace.outputs.WORKSPACE }}" >> $GITHUB_ENV
    - name: Upload and publish draft
      env:
        HOME: 'home/runner'
      run: |
        # installs hub to ~/bin
        $HOME/travisci-tools/release_github/install_hub.sh
        echo "$HOME/bin:$HOME/travisci-tools/release_github" >> $GITHUB_PATH
    - name: test
      env:
        HOME: 'home/runner'
        GITHUB_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        TRAVIS_OS_NAME: 'linux'
        DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
        DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      run: |
        make -e setup build
        # now we're going to create packages & upload packages
        #./scripts/ci_create_packages.sh && ./scripts/ci_upload_packages.sh
        # create the github release (draft)
        #cp $HOME/travisci-tools/release_github/release_github_v2.sh .
        #./release_github_v2.sh "$APP_VERSION"  
        # attach generate_secret to the github release
        #./scripts/ci_build_generate_secret.sh && ./scripts/ci_attach_generate_secret.sh
    

